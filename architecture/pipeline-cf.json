{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "",
  "Resources": {
    "S3ArtifactBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketName": "artifact-bucket-valhalla-12971829382",
        "AccessControl": "PublicRead"
      },
      "DeletionPolicy": "Delete"
    },

    "s3DevSiteBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "AccessControl": "PublicRead",
        "BucketName": "valhalla-12971829382",
        "WebsiteConfiguration": {
          "IndexDocument": "index.html",
          "ErrorDocument": "index.html"
        }
      }
    },

    "s3DevSiteBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": { "Ref": "s3DevSiteBucket" },
        "PolicyDocument": {
          "Id": "DevSite",
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "PublicReadForGetBucketObjects",
              "Effect": "Allow",
              "Principal": "*",
              "Action": "s3:GetObject",
              "Resource": {
                "Fn::Join": [
                  "",
                  ["arn:aws:s3:::", { "Ref": "s3DevSiteBucket" }, "/*"]
                ]
              }
            }
          ]
        }
      }
    },

    "getPutSourceBucket": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": {
            "Effect": "Allow",
            "Resource": [
              {
                "Fn::Join": [
                  "",
                  ["arn:aws:s3:::", { "Ref": "S3ArtifactBucket" }, "/*"]
                ]
              },
              {
                "Fn::Join": [
                  "",
                  ["arn:aws:s3:::", { "Ref": "s3DevSiteBucket" }, "/*"]
                ]
              }
            ],
            "Action": ["s3:PutObject", "s3:GetObject"]
          }
        },

        "PolicyName": "GetPutSourceBucket",
        "Roles": [
          { "Ref": "IAmSpartacusNowForCodeBuild" },
          { "Ref": "IAmSpartacus" }
        ]
      }
    },

    "IAmSpartacusNowForCodeBuild": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": ["codepipeline.amazonaws.com"]
              },
              "Action": ["sts:AssumeRole"]
            },
            {
              "Effect": "Allow",
              "Principal": {
                "Service": ["codebuild.amazonaws.com"]
              },
              "Action": ["sts:AssumeRole"]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "root",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": {
                "Effect": "Allow",
                "Resource": [
                  {
                    "Fn::Join": [
                      "",
                      ["arn:aws:s3:::valhalla-aws-angular-artifacts/*"]
                    ]
                  }
                ],
                "Action": ["s3:PutObject", "s3:GetObject"]
              }
            }
          },
          {
            "PolicyName": "logStreams",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": {
                "Effect": "Allow",
                "Resource": "*",
                "Action": [
                  "logs:CreateLogStream",
                  "logs:GetLogEvents",
                  "logs:CreateLogGroup",
                  "logs:PutLogEvents"
                ]
              }
            }
          },
          {
            "PolicyName": "ecrPull",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": {
                "Effect": "Allow",
                "Resource": "*",
                "Action": [
                  "ecr:GetAuthorizationToken",
                  "ecr:BatchCheckLayerAvailability",
                  "ecr:GetDownloadUrlForLayer",
                  "ecr:GetRepositoryPolicy",
                  "ecr:DescribeRepositories",
                  "ecr:ListImages",
                  "ecr:DescribeImages",
                  "ecr:BatchGetImage",
                  "ecr:GetLifecyclePolicy",
                  "ecr:GetLifecyclePolicyPreview",
                  "ecr:ListTagsForResource",
                  "ecr:DescribeImageScanFindings"
                ]
              }
            }
          },
          {
            "PolicyName": "Reporter",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": {
                "Effect": "Allow",
                "Resource": "*",
                "Action": [
                  "codebuild:CreateReportGroup",
                  "codebuild:CreateReport",
                  "codebuild:UpdateReport",
                  "codebuild:BatchPutTestCases",
                  "codebuild:BatchPutCodeCoverages"
                ]
              }
            }
          }
        ],
        "RoleName": "MathRole-WhateverIWantNowForCodeBuild"
      }
    },
    "IAmSpartacus": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": ["codepipeline.amazonaws.com"]
              },
              "Action": ["sts:AssumeRole"]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "startBuild",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": {
                "Effect": "Allow",
                "Resource": [
                  {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:codebuild:",
                        { "Ref": "AWS::Region" },
                        ":",
                        { "Ref": "AWS::AccountId" },
                        ":project/",
                        { "Ref": "codebuild" }
                      ]
                    ]
                  }
                ],
                "Action": ["codebuild:StartBuild", "codebuild:BatchGetBuilds"]
              }
            }
          }
        ],
        "RoleName": "MathRole-WhateverIWant"
      }
    },
    "codebuild": {
      "Type": "AWS::CodeBuild::Project",
      "Properties": {
        "Artifacts": {
          "Type": "CODEPIPELINE"
        },
        "SecondaryArtifacts": [
          {
            "ArtifactIdentifier": "dev_build",
            "EncryptionDisabled": "True",
            "Location": { "Ref": "s3DevSiteBucket" },
            "Name": "/",
            "Type": "S3"
          },
          {
            "ArtifactIdentifier": "unit_test",
            "EncryptionDisabled": "True",
            "Location": { "Ref": "S3ArtifactBucket" },
            "Type": "S3",
            "Name": "unit_test"
          },
          {
            "ArtifactIdentifier": "coverage",
            "EncryptionDisabled": "True",
            "Location": { "Ref": "S3ArtifactBucket" },
            "Type": "S3",
            "Name": "coverage"
          }
        ],
        "Description": "Build Valhalla for the gods",
        "Environment": {
          "Type": "LINUX_CONTAINER",
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "Image": "aws/codebuild/standard:1.0"
        },
        "Name": "build-valhalla",
        "ServiceRole": { "Fn::GetAtt": ["IAmSpartacusNowForCodeBuild", "Arn"] },
        "Source": {
          "Type": "CODEPIPELINE"
        }
      }
    },
    "codepipeline": {
      "Type": "AWS::CodePipeline::Pipeline",
      "Properties": {
        "ArtifactStore": {
          "Type": "S3",
          "Location": { "Ref": "S3ArtifactBucket" }
        },
        "DisableInboundStageTransitions": [],
        "Name": "BuildPipeline",
        "RestartExecutionOnUpdate": false,
        "RoleArn": { "Fn::GetAtt": ["IAmSpartacus", "Arn"] },
        "Stages": [
          {
            "Name": "Source",
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Source",
                  "Owner": "ThirdParty",
                  "Version": "1",
                  "Provider": "GitHub"
                },
                "Configuration": {
                  "Owner": {
                    "Ref": "GitHubOwner"
                  },
                  "Repo": {
                    "Ref": "RepositoryName"
                  },
                  "Branch": {
                    "Ref": "BranchName"
                  },
                  "OAuthToken": "{{resolve:secretsmanager:GithubWebHookSecret-ldiZrXPJlItz:SecretString:githubToken}}",
                  "PollForSourceChanges": false
                },
                "Name": "sourceRepo",
                "OutputArtifacts": [{ "Name": "sourceRepoArtifacts" }],
                "RunOrder": 1
              }
            ]
          },
          {
            "Name": "Build",
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Version": "1",
                  "Provider": "CodeBuild"
                },
                "Configuration": {
                  "ProjectName": "build-valhalla",
                  "PrimarySource": "sourceRepoArtifacts"
                },
                "InputArtifacts": [{ "Name": "sourceRepoArtifacts" }],
                "Name": "build-magic",
                "OutputArtifacts": [{ "Name": "magicOut" }],
                "RunOrder": 1
              }
            ]
          }
        ]
      }
    },
    "AppPipelineWebhook": {
      "Type": "AWS::CodePipeline::Webhook",
      "Properties": {
        "Authentication": "GITHUB_HMAC",
        "AuthenticationConfiguration": {
          "SecretToken": "{{resolve:secretsmanager:GithubWebHookSecret-ldiZrXPJlItz:SecretString:githubToken}}"
        },
        "Filters": [
          {
            "JsonPath": "$.ref",
            "MatchEquals": "refs/heads/{Branch}"
          }
        ],
        "TargetPipeline": {
          "Ref": "codepipeline"
        },
        "TargetAction": "sourceRepo",
        "Name": "AppPipelineWebhook",
        "TargetPipelineVersion": {
          "Fn::GetAtt": ["codepipeline", "Version"]
        },
        "RegisterWithThirdParty": true
      }
    }
  },
  "Parameters": {
    "BranchName": {
      "Description": "GitHub branch name",
      "Type": "String",
      "Default": "master"
    },
    "GitHubOwner": {
      "Type": "String",
      "Default": "stbth01"
    },
    "RepositoryName": {
      "Type": "String",
      "Default": "aws-angular-build-test"
    }
  }
}
